[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "conda-forge-converter"
dynamic = ["version"]
description = "Convert Anaconda environments to conda-forge with the same top-level dependency versions"
readme = "README.md"
requires-python = ">=3.11"
license = {file = "LICENSE"}
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
maintainers = [
    {name = "Your Name", email = "your.email@example.com"},
]
keywords = ["conda", "conda-forge", "anaconda", "environment", "virtual environment"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development",
    "Topic :: System :: Installation/Setup",
    "Topic :: System :: Systems Administration",
]

dependencies = [
    "pyyaml>=6.0",
    "typing_extensions>=4.7.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.1.0",
    "mypy>=1.0.0",
    "ruff>=0.0.54",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
]

[project.scripts]
conda-forge-converter = "conda_forge_converter.cli:main"

[project.urls]
Homepage = "https://github.com/yourusername/conda-forge-converter"
Documentation = "https://github.com/yourusername/conda-forge-converter#readme"
Issues = "https://github.com/yourusername/conda-forge-converter/issues"
Source = "https://github.com/yourusername/conda-forge-converter"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.wheel]
packages = ["src/conda_forge_converter"]

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.ruff]
target-version = "py311"
line-length = 100
select = ["E", "F", "B", "I", "N", "UP", "ANN", "PT", "RUF"]
ignore = []

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401", "E402"]
"tests/*" = ["E501", "ANN"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
markers = [
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
] 