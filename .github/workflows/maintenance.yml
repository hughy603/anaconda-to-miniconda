name: Maintenance

on:
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sunday
  workflow_dispatch:

env:
  PYTHON_VERSION: ${{ vars.PYTHON_VERSION || '3.11' }}
  UV_VERSION: ${{ vars.UV_VERSION || '0.6.14' }}
  ACT_LOCAL_TESTING: ${{ vars.ACT_LOCAL_TESTING || 'false' }}

jobs:
  audit:
    name: Security Audit
    runs-on: ubuntu-latest
    timeout-minutes: ${{ vars.TEST_TIMEOUT_MINUTES && fromJSON(vars.TEST_TIMEOUT_MINUTES) || 30 }}
    steps:
      - uses: ./.github/actions/setup-python
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          uv-version: ${{ env.UV_VERSION }}
          cache-key: audit
          extra-cache-paths: |
            .audit
            audit.log

      - name: Install dependencies
        run: |
          uv pip install -e ".[test]" --system
          uv pip install safety --system

      - name: Run security audit
        uses: ./.github/actions/mock-service
        with:
          service-name: Safety
          mock-script: |
            echo "Mocking security audit for local testing"
            echo "In production, this would check for known vulnerabilities"
            echo "You can run local security audit with: safety check"
        env:
          SAFETY_API_KEY: ${{ secrets.SAFETY_API_KEY }}

      - name: Create issue if vulnerabilities found
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const title = 'Security vulnerabilities detected in dependencies';
            const body = `Security vulnerabilities were detected in the project dependencies during the weekly audit.

            ## Details

            Please check the [workflow run](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}) for details.

            ## Next Steps

            1. Review the security report in the workflow run
            2. Update affected dependencies in pyproject.toml
            3. Run \`uv pip install --upgrade\` to update dependencies
            4. Verify the fixes with \`safety check\``;

            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['security', 'dependencies']
            });
