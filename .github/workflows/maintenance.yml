name: Maintenance

on:
  schedule:
    - cron: "0 0 * * 0"  # Run weekly on Sunday
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write
  issues: write

env:
  PYTHON_VERSION: '3.11'
  UV_VERSION: "0.7.1"

jobs:
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install UV
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            ~/.cache/pip
          key: ${{ runner.os }}-py${{ env.PYTHON_VERSION }}-uv${{ env.UV_VERSION }}-security-${{ hashFiles('requirements.lock') }}
          restore-keys: |
            ${{ runner.os }}-py${{ env.PYTHON_VERSION }}-uv${{ env.UV_VERSION }}-security-

      - name: Install dependencies
        run: |
          uv pip install -r requirements.lock --system
          uv pip install pip-audit --system

      - name: Run security checks
        id: security_check
        run: |
          uv run security || echo "security_failed=true" >> $GITHUB_OUTPUT
          pip-audit || echo "audit_failed=true" >> $GITHUB_OUTPUT

      - name: Create issue if vulnerabilities found
        if: steps.security_check.outputs.security_failed == 'true' || steps.security_check.outputs.audit_failed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const title = 'Security vulnerabilities detected in dependencies';
            const body = `Security vulnerabilities were detected in the project dependencies during the weekly audit.

            ## Details

            Please check the [workflow run](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}) for details.

            ## Next Steps

            1. Review the security report in the workflow run
            2. Update affected dependencies in pyproject.toml
            3. Run \`uv run deps-update\` to update the lock file
            4. Verify the fixes with \`uv run security\``;

            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['security', 'dependencies']
            });

  code-quality:
    name: Code Quality Metrics
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install UV
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          uv pip install -r requirements.lock --system
          uv pip install radon xenon --system

      - name: Run complexity analysis
        run: |
          radon cc src/ -a -s
          xenon --max-absolute B --max-modules B --max-average A src/

      - name: Run test coverage
        run: |
          uv run test-cov

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
