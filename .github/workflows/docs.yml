name: Documentation

on:
  push:
    branches: [ master, develop ]
    paths:
      - 'docs/**'
      - '.github/workflows/docs.yml'
      - 'mkdocs.yml'
  pull_request:
    branches: [ master, develop ]
    paths:
      - 'docs/**'
      - '.github/workflows/docs.yml'
      - 'mkdocs.yml'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write  # Needed for commenting on PRs

env:
  ACT_LOCAL_TESTING: ${{ vars.ACT_LOCAL_TESTING || 'false' }}
  PYTHON_VERSION: "3.11"
  UV_VERSION: "0.6.14"
  DOCS_VERSION: ${{ github.ref_name }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    name: Build Documentation
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install UV
        run: |
          python -m pip install --upgrade pip
          pip install uv==${{ env.UV_VERSION }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            ~/.cache/pip
            .cache/mkdocs
          key: ${{ runner.os }}-py${{ env.PYTHON_VERSION }}-uv${{ env.UV_VERSION }}-docs-${{ hashFiles('requirements.lock') }}
          restore-keys: |
            ${{ runner.os }}-py${{ env.PYTHON_VERSION }}-uv${{ env.UV_VERSION }}-docs-

      - name: Install dependencies
        run: |
          uv pip install -e ".[docs]" --system

      - name: Check spelling
        id: spelling
        continue-on-error: true
        run: |
          uv pip install codespell --system
          codespell --skip="*.pyc,*.git,*.png,*.jpg,*.jpeg,*.gif,*.svg,*.ico" --quiet-level=2 docs/ || echo "::warning::Spelling check failed"

      - name: Build MkDocs site
        id: build
        run: |
          hatch run docs-build -- --strict

      - name: Verify site directory exists
        run: |
          if [ ! -d "site" ]; then
            echo "::error::site directory not found after build"
            exit 1
          fi

      - name: Upload artifact (Production)
        if: ${{ !env.ACT_LOCAL_TESTING || env.ACT_LOCAL_TESTING != 'true' }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site
          retention-days: 90

      - name: Mock artifact upload (Local Testing)
        if: ${{ env.ACT_LOCAL_TESTING == 'true' }}
        run: |
          echo "Mocking artifact upload for local testing"
          echo "Documentation built successfully to ./site directory"
          ls -la ./site

      - name: Check for broken links
        id: links
        continue-on-error: true
        run: |
          uv pip install linkchecker --system
          linkchecker --check-extern ./site/index.html || echo "::warning::Broken links found"

      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const message = `Documentation build failed for ${{ env.DOCS_VERSION }}`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });

  deploy:
    name: Deploy Documentation
    needs: build
    if: github.ref == 'refs/heads/master' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Deploy to GitHub Pages (Production)
        id: deployment
        if: ${{ !env.ACT_LOCAL_TESTING || env.ACT_LOCAL_TESTING != 'true' }}
        uses: actions/deploy-pages@v4

      - name: Mock GitHub Pages deployment (Local Testing)
        if: ${{ env.ACT_LOCAL_TESTING == 'true' }}
        run: |
          echo "Mocking GitHub Pages deployment for local testing"
          echo "In production, this would deploy the site to GitHub Pages"
          echo "Documentation is available locally in the ./site directory"

      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const message = `Documentation deployment failed for ${{ env.DOCS_VERSION }}`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });
