name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  PYTHON_VERSION: "3.11"
  UV_VERSION: "0.7.1"

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install UV
        shell: bash
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            ~/.cache/pip
          key: ${{ runner.os }}-py${{ matrix.python-version }}-uv${{ env.UV_VERSION }}-${{ hashFiles('requirements.lock') }}
          restore-keys: |
            ${{ runner.os }}-py${{ matrix.python-version }}-uv${{ env.UV_VERSION }}-

      - name: Install dependencies
        run: |
          # Install the project with dev and test extras to get all development dependencies
          uv pip install -e ".[dev,test]" --system

      - name: Run linting and type checking
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        run: |
          hatch run lint
          hatch run format -- --check
          hatch run type-check

      - name: Run tests
        run: |
          hatch run test:cov

      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

      - name: Run security checks
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        run: |
          hatch run security
